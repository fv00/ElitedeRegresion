knitr::opts_chunk$set(echo = TRUE)
library(car)
library(dplyr)
#library(perturb)
library(leaps)
library(olsrr)
#LEER DATOS EN archivo asignado a su grupo, as ́ı
datos=read.table("APC1modifm3.csv",header=T,sep=";",dec=",",
colClasses=c(rep("numeric",7),"factor",rep("numeric",3),"factor"))
#CONSULTA DE NOMBRE DE VARIABLES EN OBJETO datos
regresoras <- names(datos)[names(datos) != c("ID", "AEM", "REGION")]
numericas <- c(regresoras)
regresoras <- paste(regresoras[2:length(regresoras)], collapse =" +")
library(car)
library(dplyr)
#library(perturb)
library(leaps)
library(olsrr)
#LEER DATOS EN archivo asignado a su grupo, as ́ı
datos=read.table("APC1modifm3.csv",header=T,sep=";",dec=",",
colClasses=c(rep("numeric",7),"factor",rep("numeric",3),"factor"))
#CONSULTA DE NOMBRE DE VARIABLES EN OBJETO datos
regresoras <- names(datos)[names(datos) != c("ID", "AEM", "REGION")]
numericas <- c(regresoras)
regresoras <- paste(regresoras[2:length(regresoras)], collapse =" +")
rlm_formula = formula(paste(c("DPERM", regresoras), collapse = " ~ ") )
(modelo <- lm(rlm_formula, data= datos))
summary(modelo)
kable(modelo$coefficients)
library(knitr)
kable(modelo$coefficients)
str(modelo)
summary(modelo)
str(summary(modelo))
summary(modelo)$coefficients
kable(summary(modelo)$coefficients)
summary(modelo)
modelo
summary(modelo)
kable(summary(modelo)$coefficients)
knitr::opts_chunk$set(echo = TRUE)
library(car)
library(dplyr)
#library(perturb)
library(leaps)
library(olsrr)
library(knitr)
#LEER DATOS EN archivo asignado a su grupo, as ́ı
datos=read.table("APC1modifm3.csv",header=T,sep=";",dec=",",
colClasses=c(rep("numeric",7),"factor",rep("numeric",3),"factor"))
#CONSULTA DE NOMBRE DE VARIABLES EN OBJETO datos
regresoras <- names(datos)[names(datos) != c("ID", "AEM", "REGION")]
numericas <- c(regresoras)
regresoras <- paste(regresoras[2:length(regresoras)], collapse =" +")
rlm_formula = formula(paste(c("DPERM", regresoras), collapse = " ~ ") )
(modelo <- lm(rlm_formula, data= datos))
kable(summary(modelo)$coefficients)
datos_estandarizados <- datos[, c(numericas)] %>% scale(center = TRUE, scale = TRUE) %>% data.frame()
(modelo_estandarizado <- lm(rlm_formula, data = datos_estandarizados))
summary(modelo_estandarizado)
anova(modelo)
residualPlots(modelo, type = "rstudent", tests = FALSE, quadratic = FALSE, fit = TRUE)
ols_plot_resid_qq(model = modelo)
#regresiones  <- ols_step_all_possible(modelo)
#tabladeRegresiones <- as.data.frame(regresiones)
#tabladeRegresiones %>% mutate(tabladeRegresiones, mse = regresiones$msep)
x= 2
modelo$coefficients
class(modelo$coefficients)
rlm_formula = formula(paste(c("DPERM", regresoras), collapse = " ~ ") )
(modelo1 <- lm(rlm_formula, data= datos))
coeficientes_modelo1 <- modelo$coefficients
kable(summary(modelo)$coefficients)
x = 2
?paste
paste(coeficientes_modelo1, sep = " + ")
paste(coeficientes_modelo1, sep = " + ")
paste(1:12)
paste(coeficientes_modelo1, sep = " + ")
paste(coeficientes_modelo1, sep = " + ")
coeficientes_modelo1
paste(coeficientes_modelo1, sep = " + ")
paste(paste(coeficientes_modelo1), sep = " + ")
paste("A", 1:6, sep = "")
paste(coeficientes_modelo1, sep = " + ", collapse = "")
paste(coeficientes_modelo, collapse = "+")
paste(coeficientes_modelo, collapse = "+")
paste(coeficientes_modelo1, collapse = "+")
paste(coeficientes_modelo1, collapse = " + ")
coeficientes_modelo1
kable(anova(modelo1))
anova(modelo1)
knitr::opts_chunk$set(echo = TRUE)
opts <- options(knitr.kable.NA = "")
knitr::kable(d)
knitr::opts_chunk$set(echo = TRUE)
opts <- options(knitr.kable.NA = "")
opts
kable(anova(modelo1))
anova(modelo)
summary(modelo)
Anova(modelo1)
anova(modelo)
regresoras
respuesta
anova_mod1 <- anova(modelo1)
kable(anova(modelo1))
anova_mod1$`F value`
anova_mod1$`Sum Sq`
?anova
anova_mod1
anova_mod1
anova_mod1 <- Anova(modelo1)
kable(anova(modelo1))
Anova(modelo1)
str(modelo1)
modelo1
summary(modelo1)
anova(modelo1)
Anova(modelo1)
anova_mod1$`Sum Sq`
anova_mod1$`Sum Sq`
anova_mod1
anova_mod1
anova_mod1$Df
anova_mod1$`Sum Sq`[-1]
anova_mod1$`Sum Sq`
anova_mod1$`Sum Sq`[-3]
anova_mod1$`Sum Sq`[-5]
anova_mod1$`Sum Sq`[-8]
anova_mod1$`Sum Sq`[-9]
anova_mod1$`Sum Sq`
anova_mod1$`Sum Sq`[-1]
anova_mod1$`Sum Sq`[-length(anova_mod1)]
anova_mod1$`Sum Sq`[-c(length(anova_mod1))]
anova_mod1$`Sum Sq`[-c(length(anova_mod1)-1)]
anova_mod1$`Sum Sq`[-c(length(anova_mod1)+1)]
anova_mod1$`Sum Sq`[-c(length(anova_mod1$`Sum Sq`)+1)]
anova_mod1$`Sum Sq`[-c(length(anova_mod1$`Sum Sq`)-1)]
anova_mod1$`Sum Sq`[-c(length(anova_mod1$`Sum Sq`))]
ANOVA(modelo1)
summary(modelo)
?rsm
rsm
library(car)
library(dplyr)
library(rsm)
library(leaps)
library(olsrr)
library(knitr)
?rsm
anova(rsm(rlm_formula, datos))
Anova(rsm(rlm_formula, datos))
anova(rsm(rlm_formula, datos))
?F0
regresoras
regresoras1 <- names(datos)[names(datos) != c("ID", "AEM", "REGION")]
regresoras1
regresoras1<-regresoras1[2:length(regresoras1)]
regresoras1
anova(rsm("DPERM"~F0(regresoras1), datos))
anova(rsm(rlm_formula, datos))
myAnova <- function (lm.model ){
SSq <- unlist ( anova (lm.model )[" Sum Sq"])
k <- length ( SSq ) - 1
SSR <- sum ( SSq [1: k])
SSE <- SSq [(k + 1)]
MSR <- SSR /k
df.error <- unlist ( anova (lm.model )["Df"])[k + 1]
MSE <- SSE /df.error
F0 <- MSR / MSE
PV <- pf(F0 , k, df.error , lower.tail = F)
result <-data.frame(Sum_of_Squares = format(c(SSR , SSE ), digits = 6) ,
DF = format (c(k, df.error ), digits = 6),
Mean_Square = format(c(MSR , MSE ), digits = 6) ,
F_Value = c(format(F0 , digits = 6) ,''),
P_value = c(format(PV , digits = 6) , ''), row.names = c(" Model ", " Error "))
result
}
myAnova(modelo1)
myAnova <- function (lm.model ){
SSq <- unlist ( anova (lm.model )[" Sum Sq"])
k <- length ( SSq ) - 1
SSR <- sum ( SSq [1: k])
SSE <- SSq [(k + 1)]
MSR <- SSR /k
df.error <- unlist ( anova(lm.model )["Df"])[k + 1]
MSE <- SSE /df.error
F0 <- MSR / MSE
PV <- pf(F0 , k, df.error , lower.tail = F)
result <-data.frame(Sum_of_Squares = format(c(SSR , SSE ), digits = 6) ,
DF = format (c(k, df.error ), digits = 6),
Mean_Square = format(c(MSR , MSE ), digits = 6) ,
F_Value = c(format(F0 , digits = 6) ,''),
P_value = c(format(PV , digits = 6) , ''), row.names = c(" Model ", " Error "))
result
}
myAnova(modelo1)
myAnova <- function (lm.model ){
SSq <- unlist(anova(lm.model )[" Sum Sq"])
k <- length(SSq) - 1
SSR <- sum(SSq[1: k])
SSE <- SSq[(k + 1)]
MSR <- SSR /k
df.error <- unlist ( anova(lm.model )["Df"])[k + 1]
MSE <- SSE /df.error
F0 <- MSR / MSE
PV <- pf(F0 , k, df.error , lower.tail = F)
result <-data.frame(Sum_of_Squares = format(c(SSR , SSE ), digits = 6) ,
DF = format(c(k, df.error ), digits = 6),
Mean_Square = format(c(MSR , MSE ), digits = 6) ,
F_Value = c(format(F0 , digits = 6) ,''),
P_value = c(format(PV , digits = 6) , ''), row.names = c(" Model ", " Error "))
result
}
myAnova <- function (lm.model){
SSq <- unlist(anova(lm.model)[" Sum Sq"])
k <- length(SSq) - 1
SSR <- sum(SSq[1:k])
SSE <- SSq[(k + 1)]
MSR <- SSR/k
df.error <- unlist ( anova(lm.model )["Df"])[k + 1]
MSE <- SSE /df.error
F0 <- MSR / MSE
PV <- pf(F0 , k, df.error , lower.tail = F)
result <-data.frame(Sum_of_Squares = format(c(SSR , SSE ), digits = 6) ,
DF = format(c(k, df.error ), digits = 6),
Mean_Square = format(c(MSR , MSE ), digits = 6) ,
F_Value = c(format(F0 , digits = 6) ,''),
P_value = c(format(PV , digits = 6) , ''), row.names = c(" Model ", " Error "))
result
}
myAnova <- function (lm.model){
SSq <- unlist(anova(lm.model)[" Sum Sq"])
k <- length(SSq) - 1
SSR <- sum(SSq[1:k])
SSE <- SSq[(k + 1)]
MSR <- SSR/k
df.error <- unlist ( anova(lm.model )["Df"])[k + 1]
MSE <- SSE /df.error
F0 <- MSR / MSE
PV <- pf(F0 , k, df.error , lower.tail = F)
result <-data.frame(Sum_of_Squares = format(c(SSR , SSE ), digits = 6) ,
DF = format(c(k, df.error ), digits = 6),
Mean_Square = format(c(MSR , MSE ), digits = 6) ,
F_Value = c(format(F0 , digits = 6) ,''),
P_value = c(format(PV , digits = 6) , ''), row.names = c(" Model ", " Error "))
result
}
myAnova(modelo1)
myAnova <- function (lm.model){
SSq <- unlist(anova(lm.model)["Sum Sq"])
k <- length(SSq) - 1
SSR <- sum(SSq[1:k])
SSE <- SSq[(k + 1)]
MSR <- SSR/k
df.error <- unlist ( anova(lm.model )["Df"])[k + 1]
MSE <- SSE /df.error
F0 <- MSR / MSE
PV <- pf(F0 , k, df.error , lower.tail = F)
result <-data.frame(Sum_of_Squares = format(c(SSR , SSE ), digits = 6) ,
DF = format(c(k, df.error ), digits = 6),
Mean_Square = format(c(MSR , MSE ), digits = 6) ,
F_Value = c(format(F0 , digits = 6) ,''),
P_value = c(format(PV , digits = 6) , ''), row.names = c(" Model ", " Error "))
result
}
myAnova(modelo1)
kable(myAnova(modelo1))
kable(myAnova(modelo1))
kable(myAnova(modelo1))
summary(modelo)
modelo1$terms
summary(modelo1)
str(summary(modelo1))
summary(modelo1)["r.squared"]
summary(modelo1)["r.squared", adj.r.squared]
summary(modelo1)["r.squared", "adj.r.squared"]
summary(modelo1)[c("r.squared", "adj.r.squared")]
kable(summary(modelo1)[c("r.squared", "adj.r.squared")])
kable(t(summary(modelo1)[c("r.squared", "adj.r.squared")]))
datos_estandarizados <- datos[, c(numericas)] %>% scale(center = TRUE, scale = TRUE) %>% data.frame()
(modelo_estandarizado <- lm(rlm_formula, data = datos_estandarizados))
kable(modelo_estandarizado$coefficients)
kable(t(modelo_estandarizado$coefficients))
myAnova <- function (lm.model){
SSq <- unlist(anova(lm.model)["Sum Sq"])
k <- length(SSq) - 1
SSR <- sum(SSq[1:k])
SSE <- SSq[(k + 1)]
MSR <- SSR/k
df.error <- unlist ( anova(lm.model )["Df"])[k + 1]
MSE <- SSE /df.error
F0 <- MSR / MSE
PV <- pf(F0 , k, df.error , lower.tail = F)
result <-data.frame(Sum_of_Squares = format(c(SSR , SSE ), digits = 6) ,
DF = format(c(k, df.error ), digits = 6),
Mean_Square = format(c(MSR , MSE ), digits = 6) ,
F_Value = c(format(F0 , digits = 6) ,''),
P_value = c(format(PV , digits = 6) , ''), row.names = c(" Model ", " Error "))
return <- result
}
kable(t(modelo_estandarizado$coefficients))
max(modelo_estandarizado$coefficients)
kable(t(modelo_estandarizado$coefficients))
max(modelo_estandarizado$coefficients)
summary(modelo_estandarizado)
summary(modelo1)
kable(summary(modelo1))
summary(modelo1)
kable(summary(modelo_1)$coefficients)
kable(summary(modelo1)$coefficients)
summary(modelo1)
anova(modelo1)
anova(modelo1)$coefficients
str(anova(modelo1))
kable(anova(modelo1))
kable(anova(modelo1)[1:3])
kable(anova(modelo1)[1:2])
kable(Anova(modelo1))
kable(Anova(modelo1)[1:2])
Anova(modelo1)
residualPlots(modelo1, type = "rstudent", tests = FALSE, quadratic = FALSE, fit = TRUE)
ols_plot_resid_qq(model = modelo1)
shapiro.test(modelo1)
shapiro.test(modelo1$residuals)
normalidad <- shapiro.test(modelo1$residuals)
normalidad$statistic
normalidad$method
normalidad$p.value
kable(shapiro.test(modelo1$residuals))
str(normalidad)
normalidad$statistic
normalidad["statistic"]
normalidad["statistic", "pvalue"]
str(normalidad)
shapiro.test(modelo1$residuals)
normalidad["statistic", "p.value"]
normalidad["statistic", "p.value"]
normalidad[c("statistic", "p.value")]
normalidad <- shapiro.test(modelo1$residuals)
kable(normalidad[c("statistic", "p.value")])
normalidad <- shapiro.test(modelo1$residuals)
kable(t(normalidad[c("statistic", "p.value")]))
normalidad <- shapiro.test(modelo1$residuals)
kable(t(normalidad[c("p.value" ,"statistic" )]))
normalidad$statistic
class(normalidad$statistic)
class(normalidad$p.value)
shapiro.test(rstudent(modelo1))
influence.measures(modelo1)
influence.measures(modelo1)$in.inf
influence.measures(modelo1)
infIndexPlot(modelo1)
head(influence.measures(modelo1))
influencias <- influence.measures(modelo1)
influencias1 <- influence.measures(modelo1)
influencias_modelo1 <- influence.measures(modelo1)
influencias_modelo1 <- influence.measures(modelo1)
head(influencias_modelo1)
