which(influencias_modelo1["cook.d"] > 1)
influencias_modelo1 <- influence.measures(modelo1)
influencias_modelo1 <- (influencias_modelo1$infmat)
influencias_modelo1 <- cbind(influencias_modelo1, std.res = rstandard(modelo1), stud.res = rstudent(modelo1))
influencias_modelo1
which(influencias_modelo1[,"cook.d"] > 1)
influencias_modelo1
which(influencias_modelo1["cook.d"] > 1)
which(influencias_modelo1[["cook.d"]] > 1)
influencias_modelo1
influencias_modelo1[,"cook.d"]
influencias_modelo1[,"cook.d"] > 1
which(influencias_modelo1[,"cook.d"] > 1)
which(influencias_modelo1[,"cook.d"] > 1)
str(influencias_modelo1)
influencePlot(modelo1)
win.graph(); infIndexPlot(modelo1)
which(influencias_modelo1[,"cook.d"] > 1)
as.vector(influencias_modelo1[,"cook.d"] > 1)
which(as.vector(influencias_modelo1[,"cook.d"] > 1))
dfbeta(modelo1)
which(influencias_modelo1[,"cook.d"] > 1)
influencias_modelo1 <- as.data.frame(influencias_modelo1)
influenciales_dfbetas <- which(abs(influencias_modelo1[,1:9])> (2/sqrt(90)),arr.ind = TRUE)
kable(influencias_modelo1[unique(influenciales_dfbetas[, "row"]), 1:9])
influencias_modelo1
influencias_modelo1[,1:9]
abs(influencias_modelo1[,1:9])> (2/sqrt(90))
influenciales_dfbetas
influencias_modelo1 <- as.data.frame(influencias_modelo1)
influenciales_dfbetas <- which(abs(influencias_modelo1[,1:9])> (2/sqrt(90)),arr.ind = F)
kable(influencias_modelo1[unique(influenciales_dfbetas[, "row"]), 1:9])
influenciales_dfbetas <- which(abs(influencias_modelo1[,1:9])> (2/sqrt(90)),arr.ind = F)
influenciales_dfbetas
influencias_modelo1 <- as.data.frame(influencias_modelo1)
influenciales_dfbetas <- which(abs(influencias_modelo1[,1:9])> (2/sqrt(90)),arr.ind = TRUE)
kable(influencias_modelo1[unique(influenciales_dfbetas[, "row"]), 1:9])
influenciales_dfbetas
which(abs(influencias_modelo1[,1:9])> (2/sqrt(90)),arr.ind = F)
influencias_modelo1 <- as.data.frame(influencias_modelo1)
influenciales_dfbetas <- which(abs(influencias_modelo1[,1:9])> (2/sqrt(90)),arr.ind = TRUE)
kable(influencias_modelo1[unique(influenciales_dfbetas[, "row"]), 1:9])
influencias_modelo1
influencias_modelo1 <- as.data.frame(influencias_modelo1)
influenciales_dfbetas <- which(abs(influencias_modelo1[,1:9])> (2/sqrt(90)),arr.ind = TRUE)
kable(influencias_modelo1[unique(influenciales_dfbetas[, "row"]), 1:9])
unique(influenciales_dfbetas[, "row"])
influencias_modelo1 <- as.data.frame(influencias_modelo1)
influenciales_dfbetas <- which(abs(influencias_modelo1[,1:9])> (2/sqrt(90)),arr.ind = TRUE)
kable(influencias_modelo1[unique(influenciales_dfbetas[, "row"]), 1:9])
IDs[unique(influenciales_dfbetas[, "row"])]
IDs[unique(influenciales_dfbetas[, "row"])]
influencias_dffits <- which(abs(influencias_modelo1[, "dffit"])>(2*(sqrt(9/90))))
kable(cbind(influencias_dffits,influencias_modelo1[ influencias_dffits,c("dffit")]))
influencias_dffits
influencias_dffits <- which(abs(influencias_modelo1[, "dffit"])>(2*(sqrt(9/90))))
kable(cbind(influencias_dffits,influencias_modelo1[ influencias_dffits,c("dffit")]))
influencias_dffits
toString(influencias_dffits)
toString(influencias_dffits)
toString(IDs[influencias_dffits])
influenciales_covratio <- which(abs(influencias_modelo1[, "cov.r"] -1)> (3*9/90))
kable(covratio(modelo1)[influenciales_covratio])
influenciales_covratio
toString(IDs[influenciales_covratio])
win.graph(); influenceIndexPlot(modelo1)
win.graph(); infIndexPlot(modelo1)
win.graph();influencePlot(modelo1)
IDs[c(22,23)]
datos2 <- datos[-c(22,23),]
modelo2 <- lm(rlm_formula, data = datos2)
kable(summary(modelo2)$coefficients)
kable(summary(modelo1)$coefficients)
summary(modelo2)$coefficients
summary(modelo1)$coefficients
kable(summary(modelo2)$coefficients, caption = "Tablade Parámetros sin obs. con ID 47y 112")
kable(summary(modelo2)$coefficients, caption = "Tabla de Parámetros sin obs. con ID 47y 112")
kable(summary(modelo2)$coefficients, caption = "Tabla de Parámetros sin obs. con ID 47 y 112")
kable(summary(modelo2)$coefficients, caption = "Tabla de Parámetros sin obs. con ID 47 y 112")
kable(summary(modelo1)$coefficients, caption = "Tabla de parámetros con todas las observaciones")
tablaParas2 <- summary(modelo2)$coefficients
kable(tablaParas2, caption = "Tabla de Parámetros sin obs. con ID 47 y 112")
tablaParas1 <- summary(modelo1)$coefficients
kable(tablaParas1, caption = "Tabla de parámetros con todas las observaciones")
tablaError <- tablaParas1-tablaParas2
tablaError
tablaError <- abs(tablaParas1-tablaParas2)
tablaErrorAbs <- abs(tablaParas1-tablaParas2)
tablaErrorAbs
summary(modelo1);summary(modelo2)
datos2 <- scale(datos[-c(22,23),])
datos2 <- scale(datos[-c(22,23),])
datos2 <- datos[-c(22,23),]
modelo2 <- lm(rlm_formula, data = datos2)
str(datos)
datos2 <- scale(datosNumericos[-c(22,23),])
modelo2 <- lm(rlm_formula, data = datos2)
datos2
str(datos2)
datos2 <- scale(datosNumericos[-c(22,23),])
modelo2 <- lm(rlm_formula, data = as.data.frame(datos2))
tablaParas2 <- summary(modelo2)$coefficients
kable(tablaParas2, caption = "Tabla de Parámetros sin obs. con ID 47 y 112")
datos1 <- scale(datosNumericos)
modelo11 <- lm(rlm_formula, data = datos1)
datos1 <- scale(datosNumericos)
modelo11 <- lm(rlm_formula, data = as.data.frame(datos1))
tablaParas1 <- summary(modelo11)$coefficients
kable(tablaParas1, caption = "Tabla de parámetros con todas las observaciones")
datos2 <- scale(datosNumericos[-c(22,23),])
modelo2 <- lm(rlm_formula, data = as.data.frame(datos2))
tablaParas2 <- summary(modelo2)$coefficients
kable(tablaParas2, caption = "Tabla de Parámetros estandarizados sin obs. con ID 47 y 112")
datos1 <- scale(datosNumericos)
modelo11 <- lm(rlm_formula, data = as.data.frame(datos1))
tablaParas1 <- summary(modelo11)$coefficients
kable(tablaParas1, caption = "Tabla de parámetros con todas las observaciones estandarizadas")
tablaErrorAbs <- abs(tablaParas1-tablaParas2)
tablaErrorAbs
tablaParas2
tablaParas1
datos1 <- scale(datosNumericos)
modelo11 <- lm(rlm_formula, data = as.data.frame(datos1))
tablaParas1 <- summary(modelo11)$coefficients
kable(tablaParas1, caption = "Tabla de parámetros con todas las observaciones estandarizadas")
tablaErrorAbs <- abs(tablaParas1-tablaParas2)
tablaErrorAbs
summary(modelo1);summary(modelo2)
summary(modelo11);summary(modelo2)
tablaErrorRelativo <- abs(tablaParas1-tablaParas2)/tablaParas1
tablaErrorRelativo
tablaErrorRelativo <- abs(tablaParas1-tablaParas2)/tablaParas2
tablaErrorRelativo
tablaErrorRelativo <- abs(tablaParas1-tablaParas2)/tablaParas1
tablaErrorRelativo <- abs(tablaParas1-tablaParas2)/tablaParas1
tablaErrorRelativo
options(digits = 5)
tablaErrorAbs
options(scipen = 5)
tablaErrorAbs
options(scipen = 999999)
tablaErrorAbs
tablaParas1
tablaParas2
c(tablaParas1$Estimate, tablaParas2$Estimate)
tablaParas1
install.packages('settings')
library(settings)
reset(options)
tablaErrorRelativo
summary(modelo11);summary(modelo2)
test <- shapiro.test(rstudent(modelo))
qqnorm(rstudent(modelo),cex=1)
qqline(rstudent(modelo),col=2)
legend("topleft",legend=rbind(c("Statistic W","p.value"),round(c(test$statistic,test$p.value),digits=5)),cex=1.2)
test <- shapiro.test(rstudent(modelo1))
qqnorm(rstudent(modelo1),cex=1)
qqline(rstudent(modelo1),col=2)
legend("topleft",legend=rbind(c("Statistic W","p.value"),round(c(test$statistic,test$p.value),digits=5)),cex=1.2)
test2 <- shapiro.test(rstudent(modelo2))
qqnorm(rstudent(modelo2),cex=1)
qqline(rstudent(modelo2),col=2)
legend("topleft",legend=rbind(c("Statistic W","p.value"),round(c(test2$statistic,test$p.value),digits=5)),cex=1.2)
test2 <- shapiro.test(rstudent(modelo2))
qqnorm(rstudent(modelo2),cex=1)
qqline(rstudent(modelo2),col=2)
legend("topleft",legend=rbind(c("Statistic W","p.value"),round(c(test2$statistic,test2$p.value),digits=5)),cex=1.2)
regresiones  <- ols_step_all_possible(modelo2)
#regresiones  <- ols_step_all_possible(modelo2)
saveRDS(regresiones, 'regresiones.RDS')
kable(cor(datos2[ , numericas]))
kable(t(vif(modelo2)))
correlaciones <- cor(datos2[ , numericas])
kable(correlaciones)
correlaciones[correlaciones > 0.9]
correlaciones > 0.9
library(corrplot)
corrplot(correlaciones)
View(datos)
?corrplot
corrplot(correlaciones, method = 'number0)
corrplot(correlaciones, method = 'number')
corrplot(correlaciones, method = c('number'))
ols_coll_diag(modelo2)
colldiag(modelo2)
knitr::opts_chunk$set(echo = TRUE)
opts <- options(knitr.kable.NA = "")
myAnova <- function (lm.model){
SSq <- unlist(anova(lm.model)["Sum Sq"])
k <- length(SSq) - 1
SSR <- sum(SSq[1:k])
SSE <- SSq[(k + 1)]
MSR <- SSR/k
df.error <- unlist ( anova(lm.model )["Df"])[k + 1]
MSE <- SSE /df.error
F0 <- MSR / MSE
PV <- pf(F0 , k, df.error , lower.tail = F)
result <-data.frame(Sum_of_Squares = format(c(SSR , SSE ), digits = 6) ,
DF = format(c(k, df.error ), digits = 6),
Mean_Square = format(c(MSR , MSE ), digits = 6) ,
F_Value = c(format(F0 , digits = 6) ,''),
P_value = c(format(PV , digits = 6) , ''), row.names = c(" Model ", " Error "))
return <- result
}
miscoeficientes <- function(modeloreg, datosreg){
coefi <- coef(modeloreg)
datos2 <- as.data.frame(scale(datosreg))
coef.std <- c(0, coef( lm( update( formula(modeloreg) ,~.+0 ),datos2 ) ) )
limites <- confint(modeloreg,level = 0.95)
vifs <- c(0,vif(modeloreg))
resul <- data.frame(
Estimación = coefi,Limites = limites,Vif = vifs,Coef.Std = coef.std)
resul
}
library(car)
library(dplyr)
library(rsm)
library(leaps)
library(olsrr)
library(knitr)
library(corrplot)
#LEER DATOS EN archivo asignado a su grupo, así:
datos=read.table("APC1modifm3.csv",header=T,sep=";",dec=",",
colClasses=c(rep("numeric",7),"factor",rep("numeric",3),"factor"))
#CONSULTA DE NOMBRE DE VARIABLES EN OBJETO datos
numericas <- names(datos)[names(datos) != c("ID", "AEM", "REGION")]
datosNumericos <- datos[numericas]
regresoras_formula<- paste(numericas[2:length(numericas)], collapse =" +")
rlm_formula = formula(paste(c("DPERM", regresoras_formula), collapse = " ~ ") )
modelo1 <- lm(rlm_formula, data= datos)
coeficientes_modelo1 <- modelo1$coefficients
miscoefs <- miscoeficientes(modelo1, datosNumericos)
kable(summary(modelo1)$coefficients)
kable(myAnova(modelo1))
kable(t(summary(modelo1)[c("r.squared", "adj.r.squared")]))
stCoefs <- miscoefs$Coef.Std
names(stCoefs) <- row.names(miscoefs)
stCoefs <- sort(abs(stCoefs))
stCoefs <- stCoefs[-1]
kable(sort(abs(stCoefs)),
caption = "Tabla de coeficientes Estandarizados",
col.names = c("Coef.Std"))
kable(summary(modelo1)$coefficients[-1,-2],
col.names = c("Estimación", 'Estadístico t', 'Valor p'))
lh1 <- linearHypothesis(modelo1, "PDP = 0")
lh1[1, 3:6] <- c(" ", " ", " ", " ")
kable(lh1)
lh2 <- linearHypothesis(modelo1, "EDAD = 0")
lh2[1, 3:6] <- c(" ", " ", " ", " ")
kable(lh2)
kable(anova(modelo1)[2:1],
caption = "Sumas de cuadrados tipo I y SSE",
col.names = c("Suma de cuadrados", "g.l"))
kable(Anova(modelo1)[1:2][order(Anova(modelo1)[1]),],
caption = "Sumas de cuadrados tipo II y SSE",
col.names = c("Suma de cuadrados", "g.l"))
residualPlots(modelo1, type = "rstudent", tests = FALSE, fit = TRUE)
test <- shapiro.test(rstudent(modelo1))
qqnorm(rstudent(modelo1),cex=1)
qqline(rstudent(modelo1),col=2)
legend("topleft",legend=rbind(c("Statistic W","p.value"),round(c(test$statistic,test$p.value),digits=5)),cex=1.2)
infIndexPlot(modelo1)
influencePlot(modelo1)
IDs <- datos$ID
IDs[22]
influencias_modelo1 <- influence.measures(modelo1)
influencias_modelo1 <- (influencias_modelo1$infmat)
influencias_modelo1 <- cbind(influencias_modelo1, std.res = rstandard(modelo1), stud.res = rstudent(modelo1))
criterioHat <- 2*(8+1)/90
balanceo <- hatvalues(modelo1) > criterioHat
IDs[balanceo]
which(influencias_modelo1[,"cook.d"] > 1)
influencias_modelo1 <- as.data.frame(influencias_modelo1)
influenciales_dfbetas <- which(abs(influencias_modelo1[,1:9])> (2/sqrt(90)),arr.ind = TRUE)
kable(influencias_modelo1[unique(influenciales_dfbetas[, "row"]), 1:9])
IDs[unique(influenciales_dfbetas[, "row"])]
influencias_dffits <- which(abs(influencias_modelo1[, "dffit"])>(2*(sqrt(9/90))))
kable(cbind(influencias_dffits,influencias_modelo1[ influencias_dffits,c("dffit")]))
toString(IDs[influencias_dffits])
influenciales_covratio <- which(abs(influencias_modelo1[, "cov.r"] -1)> (3*9/90))
kable(covratio(modelo1)[influenciales_covratio])
toString(IDs[influenciales_covratio])
datos2 <- scale(datosNumericos[-c(22,23),])
modelo2 <- lm(rlm_formula, data = as.data.frame(datos2))
tablaParas2 <- summary(modelo2)$coefficients
kable(tablaParas2, caption = "Tabla de Parámetros estandarizados sin obs. con ID 47 y 112")
datos1 <- scale(datosNumericos)
modelo11 <- lm(rlm_formula, data = as.data.frame(datos1))
tablaParas1 <- summary(modelo11)$coefficients
kable(tablaParas1, caption = "Tabla de parámetros con todas las observaciones estandarizadas")
tablaErrorRelativo <- abs(tablaParas1-tablaParas2)/tablaParas1
test2 <- shapiro.test(rstudent(modelo2))
qqnorm(rstudent(modelo2),cex=1)
qqline(rstudent(modelo2),col=2)
legend("topleft",legend=rbind(c("Statistic W","p.value"),round(c(test2$statistic,test2$p.value),digits=5)),cex=1.2)
correlaciones <- cor(datos2[ , numericas])
kable(correlaciones)
corrplot(correlaciones, method = c('number'))
kable(t(vif(modelo2)))
colldiag(modelo2)
library(perturb)
colldiag(modelo2)
kable(colldiag(modelo2))
coldiag <- colldiag(modelo2)
coldiag$condindx
coldiag$pi
summary(modelo2)
options(scipen = 4)
summary(modelo2)
coldiag <- colldiag(modelo2)
coldiag <- coldiag$pi
kable(coldiag)
library(settings)
reset(options())
coldiag <- colldiag(modelo2)
coldiag <- coldiag$pi
kable(coldiag)
summary(modelo2)
datos2 <- scale(datosNumericos[-c(22,23),])
modelo2 <- lm(update( rlm_formula ,~.+0 ), data = as.data.frame(datos2))
summary(modelo2)
datos1 <- scale(datosNumericos)
modelo11 <- lm(update(modelo11 ,~.+0 ), data = as.data.frame(datos1))
tablaParas1 <- summary(modelo11)$coefficients
kable(tablaParas1, caption = "Tabla de parámetros con todas las observaciones estandarizadas")
datos1 <- scale(datosNumericos)
modelo11 <- lm(update(rlm_formula ,~.+0 ), data = as.data.frame(datos1))
tablaParas1 <- summary(modelo11)$coefficients
kable(tablaParas1, caption = "Tabla de parámetros con todas las observaciones estandarizadas")
datos2 <- scale(datosNumericos[-c(22,23),])
modelo2 <- lm(update( rlm_formula ,~.+0 ), data = as.data.frame(datos2))
tablaParas2 <- summary(modelo2)$coefficients
kable(tablaParas2, caption = "Tabla de Parámetros estandarizados sin obs. con ID 47 y 112")
datos1 <- scale(datosNumericos)
modelo11 <- lm(update(rlm_formula ,~.+0 ), data = as.data.frame(datos1))
tablaParas1 <- summary(modelo11)$coefficients
kable(tablaParas1, caption = "Tabla de parámetros con todas las observaciones estandarizadas")
tablaErrorRelativo <- abs(tablaParas1-tablaParas2)/tablaParas1
(tablaErrorRelativo <- abs(tablaParas1-tablaParas2)/tablaParas1)
summary(modelo11);summary(modelo2)
datos2 <- scale(datosNumericos[-c(22,23),])
modelo2 <- lm(update( rlm_formula ,~.+0 ), data = as.data.frame(datos2))
tablaParas2 <- summary(modelo2)$coefficients
kable(tablaParas2, caption = "Tabla de Parámetros estandarizados sin obs. con ID 47 y 112")
datos1 <- scale(datosNumericos)
modelo11 <- lm(update(rlm_formula ,~.+0 ), data = as.data.frame(datos1))
tablaParas1 <- summary(modelo11)$coefficients
kable(tablaParas1, caption = "Tabla de parámetros con todas las observaciones estandarizadas")
(tablaErrorRelativo <- abs(tablaParas1-tablaParas2)/tablaParas1)
summary(modelo11);summary(modelo2)
coldiag <- colldiag(modelo2)
coldiag <- coldiag$pi[-1]
kable(coldiag)
coldiag <- colldiag(modelo2)
coldiag <- coldiag$pi[-1,]
kable(coldiag)
coldiag <- colldiag(modelo2)
coldiag <- coldiag$pi[,-1]
kable(coldiag)
coldiag <- colldiag(modelo2)
coldiag <- coldiag$pi[,]
kable(coldiag)
kable(coldiag)
coldiag > 0.5
corrplot(coldiag)
corrplot(coldiag, method = c('number'))
(coldiag > 0.5)
corrplot(coldiag, method = c('number'))
(coldiag[,-1] > 0.5)
corrplot(coldiag[,-1], method = c('number'))
test_modelo = rlm(formula = rlm_formula, data = datosNumericos)
test_modelo = lm(formula = rlm_formula, data = datosNumericos)
update( rlm_formula ,~.+0 )
corrplot(coldiag[,-1], method = c('number'))
coldiag <- colldiag(modelo2)
coldiag <- coldiag$pi[, -1]
kable(coldiag)
corrplot(coldiag[,-1], method = c('number'))
corrplot(coldiag, method = c('number'))
head(regresiones)
regresiones$adjr
which(regresiones$adjr == min(regresiones$adjr))
plot(regresiones)
plot(regresiones)
plot(regresiones)
regresiones  <- ols_step_all_possible(modelo2)
saveRDS(regresiones, 'regresiones.RDS')
plot(regresiones)
plot(regresiones)
plot(regresiones)
ols_step_all_possible()
?ols_step_all_possible()
regresiones[9, ]
regresiones[37, ]
regresiones[93, ]
factorial(8)
kable(head(regresiones), 20)
kable(head(regresiones), 20)
head(regresiones)
kable(head(regresiones))
kable(head(regresiones, 10))
regresiones$predictors
regresiones[163, ]$predictors
"a " + "b "
formula_r2 <- regresiones[163, ]$predictors
(formula_r2 <- paste("DPERM", formula_r2))
formula_r2 <- paste(regresiones[163, ]$predictors, sep = '+')
(formula_r2 <- paste("DPERM", formula_r2))
formula_r2 <- paste(regresiones[163, ]$predictors, sep = '+')
(formula_r2 <- paste("DPERM", formula_r2))
formula_r2 <- paste(regresiones[163, ]$predictors, collapse  = '+')
(formula_r2 <- paste("DPERM", formula_r2))
formula_r2 <- paste0(regresiones[163, ]$predictors, collapse  = '+')
(formula_r2 <- paste("DPERM", formula_r2))
formula_r2 <- paste0(regresiones[163, ]$predictors, collapse  = '+')
(formula_r2 <- paste0("DPERM", formula_r2))
formula_r2 <- paste0(regresiones[163, ]$predictors, collapse  = '+')
(formula_r2 <- paste("DPERM", formula_r2))
formula_r2 <- paste0(regresiones[163, ]$predictors, collapse  = " + ")
(formula_r2 <- paste("DPERM", formula_r2))
paste0(regresiones[163, ]$predictors, collapse  = " + ")
#(formula_r2 <- paste("DPERM", formula_r2))
paste(regresiones[163, ]$predictors, collapse  = " + ")
#(formula_r2 <- paste("DPERM", formula_r2))
r2_formula <- regresiones[163, ]$predictors
paste(r2_formula, collapse  = " + ")
#(formula_r2 <- paste("DPERM", formula_r2))
r2_formula <- regresiones[163, ]$predictors
paste(r2_formula, sep = " + ")
#(formula_r2 <- paste("DPERM", formula_r2))
r2_formula <- regresiones[163, ]$predictors
paste0(r2_formula, sep = " + ")
#(formula_r2 <- paste("DPERM", formula_r2))
r2_formula <- regresiones[163, ]$predictors
paste0(r2_formula, collapse= " + ")
#(formula_r2 <- paste("DPERM", formula_r2))
r2_formula <- regresiones[163, ]$predictors
paste0(r2_formula, sepe= " + ")
#(formula_r2 <- paste("DPERM", formula_r2))
r2_formula <- regresiones[163, ]$predictors
paste0(r2_formula, sep= " + ")
#(formula_r2 <- paste("DPERM", formula_r2))
r2_formula <- regresiones[163, ]$predictors
r2_formula <- split(r2_formula)
r2_formula <- regresiones[163, ]$predictors
r2_formula <- str_split(r2_formula)
library(stringr)
r2_formula <- regresiones[163, ]$predictors
r2_formula <- str_split(r2_formula)
r2_formula <- regresiones[163, ]$predictors
r2_formula <- str_split(r2_formula, " ")
paste0(r2_formula, sep= " + ")
#(formula_r2 <- paste("DPERM", formula_r2))
r2_formula
r2_formula <- regresiones[163, ]$predictors
r2_formula <- str_split(r2_formula, " ")[1]
#(formula_r2 <- paste("DPERM", formula_r2))
r2_formula
r2_formula <- regresiones[163, ]$predictors
r2_formula <- str_split(r2_formula, " ")[[1]]
#(formula_r2 <- paste("DPERM", formula_r2))
r2_formula
r2_formula <- regresiones[163, ]$predictors
r2_formula <- str_split(r2_formula, " ")[[1]]
(formula_r2 <- paste("DPERM", formula_r2))
r2_formula <- regresiones[163, ]$predictors
r2_formula <- str_split(r2_formula, " ")[[1]]
(formula_r2 <- paste("DPERM", sep= " + "))
r2_formula <- regresiones[163, ]$predictors
r2_formula <- str_split(r2_formula, " ")[[1]]
(formula_r2 <- paste(r2_formula, sep= " + "))
r2_formula <- regresiones[163, ]$predictors
r2_formula <- str_split(r2_formula, " ")[[1]]
(formula_r2 <- paste(r2_formula, collapse= " + "))
r2_formula <- regresiones[163, ]$predictors
r2_formula <- str_split(r2_formula, " ")[[1]]
(formula_r2 <- paste("DPERM",paste(r2_formula, collapse= " + ")))
r2_formula <- regresiones[163, ]$predictors
r2_formula <- str_split(r2_formula, " ")[[1]]
(formula_r2 <- paste("DPERM ~ ",paste(r2_formula, collapse= " + ")))
regresion(regresiones[163, ], datosNumericos)
regresion <- function(fila, user_data){
result = list()
r2_formula <- fila$predictors
r2_formula <- str_split(r2_formula, " ")[[1]]
r2_formula <- paste("DPERM ~ ",paste(r2_formula, collapse= " + "))
modelo <- lm(formula = r2_formula, data = user_data)
return(modelo)
}
regresion(regresiones[163, ], datosNumericos)
Anova(regresion_r2)
regresion_r2 <- regresion(regresiones[163, ], datosNumericos)
summary(regresion_r2)
Anova(regresion_r2)
anova(regresion_r2)
myAnova(regresion_r2)
myAnova(regresion_r2)
myAnova(regresion_r2)
> myAnova(regresion_r2)
myAnova(regresion_r2)
nova(regresion_r2)
Anova(regresion_r2)
kable(myAnova(regresion_r2))
kable(regresion_r2$coefficients)
kable(regresion_r2[1])
kable(regresion_r2[1],
caption = "Tabla de coeficientes",
col.names = c("Coeficientes"))
regresiones$cp
ols_step_backward(modelo2)
ols_step_backward_p(modelo2)
ols_step_backward_p(modelo2)
